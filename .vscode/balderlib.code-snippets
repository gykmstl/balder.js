{
	// Place your io-app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// "output": {
	// 	"scope": "typescript",
	// 	"prefix": [
	// 		"op"
	// 	],
	// 	"body": [
	// 		"B.output($1)"
	// 	],
	// 	"description": "output(value?: any, end = \"\n\"): void"
	// },
	// "cout": {
	// 	"scope": "typescript",
	// 	"prefix": [
	// 		"co"
	// 	],
	// 	"body": [
	// 		"B.cout(${1:\"Hello World\"})"
	// 	],
	// 	"description": "set prompts"
	// },
	// "setPrompts": {
	// 	"scope": "typescript",
	// 	"prefix": [
	// 		"sp"
	// 	],
	// 	"body": [
	// 		"B.setPrompts(\"${1:Indata \\0}\")"
	// 	],
	// 	"description": "set prompts"
	// },
	// "input": {
	// 	"scope": "typescript",
	// 	"prefix": [
	// 		"ip"
	// 	],
	// 	"body": [
	// 		"B.input()"
	// 	],
	// 	"description": "input(): string"
	// },
	// "setSubmit": {
	// 	"scope": "typescript",
	// 	"prefix": [
	// 		"ss"
	// 	],
	// 	"body": [
	// 		"B.setSubmit(() => {",
	// 		"\t$1",
	// 		"})"
	// 	],
	// 	"description": "setSubmit(handler?: () => void): void"
	// },
	// "setUpdate": {
	// 	"scope": "typescript",
	// 	"prefix": [
	// 		"su"
	// 	],
	// 	"body": [
	// 		"B.setUpdate(() => {",
	// 		"\t$1",
	// 		"})"
	// 	],
	// 	"description": "set update"
	// },
	"arrow function": {
		"scope": "typescript",
		"prefix": "af",
		"body": [
			"() => {",
			"\t$1",
			"}"
		],
		"description": "arrow function"
	},
	"for-loop": {
		"scope": "typescript",
		"prefix": "fo",
		"body": [
			"for (let ${1:i} = ${2:0}; $1 < ${3:10}; $1++) {",
			"\t$0",
			"}"
		],
		"description": "for-loop"
	},
	"while-loop": {
		"scope": "typescript",
		"prefix": "wh",
		"body": [
			"while (${1:false}) {",
			"\t$0",
			"}"
		],
		"description": "while-loop"
	},
	"document.getElementById": {
		"scope": "typescript",
		"prefix": "ge",
		"body": [
			"let ${1:a} = document.getElementById(\"$1\")"
		],
		"description": "document.getElementById()"
	},
}